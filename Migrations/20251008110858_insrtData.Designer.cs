// <auto-generated />
using MVC.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVC.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20251008110858_insrtData")]
    partial class insrtData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MVC.Models.CRS_Result", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Course_ID")
                        .HasColumnType("int");

                    b.Property<int>("Degree")
                        .HasColumnType("int");

                    b.Property<int>("TraineeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Course_ID");

                    b.HasIndex("TraineeID");

                    b.ToTable("CRS_Results");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Course_ID = 1,
                            Degree = 90,
                            TraineeID = 1
                        },
                        new
                        {
                            ID = 2,
                            Course_ID = 2,
                            Degree = 80,
                            TraineeID = 2
                        },
                        new
                        {
                            ID = 3,
                            Course_ID = 3,
                            Degree = 70,
                            TraineeID = 3
                        });
                });

            modelBuilder.Entity("MVC.Models.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Degree")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int>("MinDegree")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Degree = 100,
                            DepartmentID = 1,
                            MinDegree = 50,
                            Name = "C#"
                        },
                        new
                        {
                            ID = 2,
                            Degree = 200,
                            DepartmentID = 1,
                            MinDegree = 80,
                            Name = "Java"
                        },
                        new
                        {
                            ID = 3,
                            Degree = 300,
                            DepartmentID = 2,
                            MinDegree = 70,
                            Name = "Recruitment"
                        });
                });

            modelBuilder.Entity("MVC.Models.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Manager")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Manager = "Ahmed",
                            Name = "IT"
                        },
                        new
                        {
                            ID = 2,
                            Manager = "Mohamed",
                            Name = "HR"
                        });
                });

            modelBuilder.Entity("MVC.Models.Instructor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CourceID")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CourceID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CourceID = 1,
                            DepartmentID = 1,
                            Image = "/images/1.jpg",
                            Name = "Ali",
                            Salary = 5000
                        },
                        new
                        {
                            ID = 2,
                            CourceID = 2,
                            DepartmentID = 1,
                            Image = "/images/2.jpg",
                            Name = "Omar",
                            Salary = 6000
                        },
                        new
                        {
                            ID = 3,
                            CourceID = 3,
                            DepartmentID = 2,
                            Image = "/images/3.jpg",
                            Name = "Hassan",
                            Salary = 7000
                        });
                });

            modelBuilder.Entity("MVC.Models.Trainee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("grade")
                        .HasColumnType("int");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Trainees");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DepartmentID = 1,
                            Name = "Sara",
                            address = "Cairo",
                            grade = 100,
                            image = "/images/1.jpg"
                        },
                        new
                        {
                            ID = 2,
                            DepartmentID = 1,
                            Name = "Lina",
                            address = "Giza",
                            grade = 80,
                            image = "/images/2.jpg"
                        },
                        new
                        {
                            ID = 3,
                            DepartmentID = 2,
                            Name = "Mona",
                            address = "Alex",
                            grade = 90,
                            image = "/images/3.jpg"
                        });
                });

            modelBuilder.Entity("MVC.Models.CRS_Result", b =>
                {
                    b.HasOne("MVC.Models.Course", "Course")
                        .WithMany("CRS_Results")
                        .HasForeignKey("Course_ID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MVC.Models.Trainee", "Trainee")
                        .WithMany("CRS_Results")
                        .HasForeignKey("TraineeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("MVC.Models.Course", b =>
                {
                    b.HasOne("MVC.Models.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("MVC.Models.Instructor", b =>
                {
                    b.HasOne("MVC.Models.Course", "Course")
                        .WithMany("Instructors")
                        .HasForeignKey("CourceID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MVC.Models.Department", "Department")
                        .WithMany("Instructors")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("MVC.Models.Trainee", b =>
                {
                    b.HasOne("MVC.Models.Department", "Department")
                        .WithMany("Trainees")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("MVC.Models.Course", b =>
                {
                    b.Navigation("CRS_Results");

                    b.Navigation("Instructors");
                });

            modelBuilder.Entity("MVC.Models.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Instructors");

                    b.Navigation("Trainees");
                });

            modelBuilder.Entity("MVC.Models.Trainee", b =>
                {
                    b.Navigation("CRS_Results");
                });
#pragma warning restore 612, 618
        }
    }
}
